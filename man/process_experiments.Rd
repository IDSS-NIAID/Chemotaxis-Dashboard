% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_experiments.R
\name{process_experiments}
\alias{process_experiments}
\title{preprocess_experiments 
This will read in results from the convolutional model and preprocess for the dashboard}
\usage{
process_experiments(
  experiment,
  source_dir,
  results_dir,
  seed = NULL,
  sig.figs = 4,
  ledge_dist = 260,
  ledge_upper = 100,
  ledge_lower = 500
)
}
\arguments{
\item{experiment}{Date of the experiment to run. Argument should be of the form: `experiment="\%Y\%m\%d"`.}

\item{source_dir}{Path to directory containing raw csv tracks files}

\item{results_dir}{Path to processed data directory}

\item{seed}{Random seed to use}

\item{sig.figs}{Number of significant figures to pass to one_experiment`}

\item{ledge_dist}{Numeric, distance between top and bottom ledges of the microscope image in micrometers (default is 260)}

\item{ledge_upper}{Numeric, location of the upper ledge in the raw Y coordinate system (default is 100)}

\item{ledge_lower}{Numeric, location of the lower ledge in the raw Y coordinate system (default is 500)}
}
\value{
A list of data.frames...
}
\description{
preprocess_experiments 
This will read in results from the convolutional model and preprocess for the dashboard
}
\details{
Work performed in `compare_two_functions`, called by this function, uses the `doParallel` package.
Using multiple cores will speed this step up significantly. To do so, you will need to make a cluster and 
register it with `doParallel` as follows: 

`my.cluster <- parallel::makeCluster(n.cores, type = "PSOCK")`
`doParallel::registerDoParallel(cl = my.cluster)`

where `n.cores` is the number of cores you with to allocate to the task.
A good starting point is `parallel::detectCores() - 1`.

If this is not done, the code will execute serially.
}
\examples{
# Here is an example line for the swarm file:
# `module load R; R -e \
#   "ChemotaxisDashboard::process_experiments('20070308', \
#                                             '~/chemodash_raw', \
#                                             '~/chemodash_out')"`
}
